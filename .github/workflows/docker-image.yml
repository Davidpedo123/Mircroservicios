name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      
      # Instalar Docker
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

      # Instalar Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep tag_name | cut -d '\"' -f 4)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      # Establecer el directorio de trabajo
      - name: run docker-compose
        working-directory: infrastructure/docker-compose
        run: docker-compose up --build

      # Ejecutar las pruebas
      - name: Run tests
        working-directory: infrastructure/docker-compose
        run: python3 test.py  # Reemplaza con tu servicio y comando de prueba

      # Paso condicional que se ejecuta solo si el script de pruebas fue exitoso
      - name: Do something if tests are successful
        if: ${{ success() }}
        run: echo "Las pruebas fueron exitosas. Continuando con el flujo de trabajo..."

      # Paso condicional que se ejecuta solo si el script de pruebas fall√≥
      - name: Fail the workflow
        if: ${{ failure() }}
        run: echo "Las pruebas fallaron. Abortando el flujo de trabajo."
