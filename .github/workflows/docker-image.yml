name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Instalar Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Especifica la versión de Python que necesitas

      # Instalar requests
      - name: Install requests
        run: |
          python -m pip install --upgrade pip
          pip install requests

      # Imprimir el directorio actual y listar archivos
      - name: Verificar la ruta y archivos
        run: |
          echo "Directorio actual: $(pwd)"
          ls -R infrastructure/docker-compose


      # Usar un contenedor de Docker preconfigurado
      - name: Run Docker in Docker
        uses: docker://docker:latest
        with:
          args: |
            sh -c "
            cd infrastructure/docker-compose && \
            # Construir y ejecutar los servicios
            docker-compose up --build -d
            "
        continue-on-error: false  # Esto es por defecto; el flujo se detendrá si falla

      # Ejecutar pruebas si es necesario
      - name: Run tests
        run: |
          python3 test.py  # Ajusta la ruta de tu script de pruebas
        continue-on-error: false  # Asegúrate de que esto se detenga en caso de fallo

      # Condicionales para manejar el éxito o el fallo
      - name: Check for success
        if: success()  # Este paso solo se ejecutará si todos los pasos anteriores fueron exitosos
        run: echo "El workflow se ejecutó correctamente."

      - name: Check for failure
        if: failure()  # Este paso se ejecutará solo si hay algún fallo en pasos anteriores
        run: echo "Hubo un error en el workflow."
